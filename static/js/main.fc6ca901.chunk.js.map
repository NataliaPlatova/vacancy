{"version":3,"sources":["components/vacancy/vacancy.js","components/vacancyList/vacancyList.js","components/filter/filter.js","components/responseComponent/responseComponent.js","components/list/list.js","components/vacancyPage/vacancyPage.js","components/app/App.js","serviceWorker.js","index.js"],"names":["Vacancy","className","to","this","props","vacancy","title","created_at","company","src","alt","location","type","React","Component","VacancyList","vacancies","length","map","key","Filter","holdChange","bind","e","newQueryParams","target","id","newWordQuery","value","onChangeParams","onChange","htmlFor","onMouseLeave","ResponseComponent","makeRequest","handleChange","list","xhr","XMLHttpRequest","endpoint","responseType","onreadystatechange","readyState","DONE","response","open","send","List","state","changeVacancyList","newList","setState","VacancyPage","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc6ca901.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './vacancy.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Request as match} from \"whatwg-fetch\";\r\n\r\nclass Vacancy extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='vacancyListItem'>\r\n                <div className='vacancyListHead'>\r\n                    <h3><Link to='/vacancy/page'>{this.props.vacancy.title}</Link></h3>\r\n                    <p className='date'>{this.props.vacancy.created_at}</p>\r\n                </div>\r\n                <h5>{this.props.vacancy.company}</h5>\r\n                <div className='location'><img src='./121923-200.png' alt='' /><p>{this.props.vacancy.location}</p></div>\r\n                <p>{this.props.vacancy.type}</p>\r\n                <hr/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Vacancy;\r\n","import React from \"react\";\r\nimport Vacancy from \"../vacancy/vacancy.js\";\r\nimport './vacancyList.css';\r\n\r\nclass VacancyList extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Найдено {this.props.vacancies.length} вакансий</h1>\r\n                <div>\r\n                    {this.props.vacancies.map(vacancy => {\r\n                        return <Vacancy vacancy={vacancy} key={vacancy} />\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VacancyList;\r\n","import React from 'react';\r\nimport './filter.css';\r\n\r\nclass Filter extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.holdChange = this.holdChange.bind(this);\r\n    }\r\n\r\n    holdChange(e) {\r\n        const newQueryParams = e.target.id;\r\n        const newWordQuery = e.target.value;\r\n        this.props.onChangeParams(newQueryParams, newWordQuery);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='filter'>\r\n                <div className=\"form-check\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"true\" id=\"full_time=\" onChange={this.holdChange}/>\r\n                        <label className=\"form-check-label\" htmlFor=\"full_time=\">\r\n                            Full time\r\n                        </label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"location=\">Location</label>\r\n                    <input className=\"form-control\" id=\"location=\" onMouseLeave={this.holdChange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description=\">Description</label>\r\n                    <input className=\"form-control\" id=\"description=\" onMouseLeave={this.holdChange}/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport VacancyList from \"../vacancyList/vacancyList\";\r\nimport Filter from \"../filter/filter\";\r\n\r\nclass ResponseComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        // this.state = {\r\n        //     queryParams: '',\r\n        //     wordQuery: ''\r\n        // }\r\n        this.makeRequest = this.makeRequest.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.makeRequest('','');\r\n    }\r\n\r\n    handleChange(list) {\r\n        this.props.onChange(list);\r\n    }\r\n\r\n    makeRequest(newQueryParams, newWordQuery) {\r\n        const xhr = new XMLHttpRequest();\r\n        const url = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?';\r\n        // let endpoint =`${url}${this.state.queryParams}${this.state.wordQuery}`;\r\n        let endpoint =`${url}${newQueryParams}${newWordQuery}`;\r\n\r\n        xhr.responseType = 'json';\r\n        xhr.onreadystatechange = () => {\r\n            if(xhr.readyState===XMLHttpRequest.DONE) {\r\n                this.handleChange(xhr.response);\r\n            }\r\n        };\r\n\r\n        xhr.open('GET', endpoint, true);\r\n        xhr.send();\r\n\r\n        // this.setState({\r\n        //     queryParams: newQueryParams,\r\n        //     wordQuery: newWordQuery\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Filter onChangeParams={this.makeRequest}/>\r\n                <VacancyList vacancies={this.props.vacancies} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResponseComponent;\r\n","import React from 'react';\r\nimport ResponseComponent from \"../responseComponent/responseComponent.js\";\r\n\r\nclass List extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={vacancies: []};\r\n        this.changeVacancyList = this.changeVacancyList.bind(this);\r\n    }\r\n\r\n    changeVacancyList(newList) {\r\n        this.setState({vacancies: newList,});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ResponseComponent vacancies ={this.state.vacancies} onChange={this.changeVacancyList} />\r\n        );\r\n    }\r\n};\r\n\r\nexport default List;\r\n","import React from 'react';\r\n\r\nconst vacancy = {\r\n    title: \"Senior Software Engineer Backend\",\r\n    company: \"TrainHeroic\",\r\n    location: \"Denver, CO\",\r\n    description:\"\\u003cp\\u003eAt TrainHeroic we build software that helps coaches and athletes be their best. Our tools enable smart and effective strength and conditioning. We proudly serve clients in the NFL, NBA, Olympics, High School, College, every major branch of the military, and private training facilities globally.\\u003c/p\\u003e\\n\\u003cp\\u003e--\\u003c/p\\u003e\\n\\u003cp\\u003eAs Senior Software Engineer, you’ll have the opportunity to provide technical leadership, mentor junior engineers, and regularly ship to production. You’ll be surrounded by a team culture of engineers who value iterative development, automated testing, and high quality code.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eDay-to-Day Responsibilities:\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003eYou will become the technical leader of our backend systems. We expect you to be a well-rounded engineer with deep expertise in coding, systems design, architecture, and security.\\u003c/li\\u003e\\n\\u003cli\\u003eThrive in a highly iterative and collaborative engineering environment. We pushed +150 production releases in 2018 and are on pace for even more this year.\\u003c/li\\u003e\\n\\u003cli\\u003eOptimize the performance and scalability of our API, database, and caching layers\\u003c/li\\u003e\\n\\u003cli\\u003eWork tightly with client-side engineers building our web, mobile, and tablet apps\\u003c/li\\u003e\\n\\u003cli\\u003eVigorously refactor code with the help of automated tests\\u003c/li\\u003e\\n\\u003cli\\u003eMentor junior engineers and uphold high standards for quality\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eWhat Some of Our Projects Look Like:\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003eAdding athlete metrics and graphing into our mobile app\\u003c/li\\u003e\\n\\u003cli\\u003eOptimizing API and database performance\\u003c/li\\u003e\\n\\u003cli\\u003eIntegrating with 3rd party notification and chat platforms\\u003c/li\\u003e\\n\\u003cli\\u003eRefactoring user subscription and access control systems\\u003c/li\\u003e\\n\\u003cli\\u003eImproving platform security and system monitoring\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eREQUIREMENTS\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eTo be successful in this role, you possess:\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e\\n\\u003cstrong\\u003eExperience:\\u003c/strong\\u003e 10+ years of software engineering experience\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cstrong\\u003eKnowledge Foundation:\\u003c/strong\\u003e Bachelors in Computer Science or STEM degree, or demonstrable experience\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cstrong\\u003eTechnical Leadership:\\u003c/strong\\u003e Experience refactoring legacy applications and seeing architectural changes through from design to completion. We are looking for you to drive technical efforts on our backend, which requires a combination of coding and systems thinking.\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cstrong\\u003eBackend Technical Skills:\\u003c/strong\\u003e Experience in PHP, Ruby, Python, or similar experience preferred, with strong knowledge of object-oriented design, common OO practices, and Design Patterns (in any language).\\u003c/li\\u003e\\n\\u003cli\\u003eOur current backend stack includes AWS, Laravel, MySQL, and Redis. Our current client-side apps are primarily built in React and React Native. As our team and needs change, we are open to exploring new technologies best suited for the job.\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cstrong\\u003eDatabase Systems Skills:\\u003c/strong\\u003e Experience with RDBMS, data storage, and caching tools such as redis, Elasticsearch, and MySQL. We are constantly searching for new ways to increase the performance at the data layer to meet growth\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eBENEFITS\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eAll Heroes Receive:\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eOur TrainHeroic team consists of about 20 people, but we receive the benefits of our much larger parent company, Peaksware:\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eCompetitive compensation and incentives\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e100% company paid medical plan for employees with buy-up options as well as dental and vision insurance for employees (dependent coverage available)\\u003c/li\\u003e\\n\\u003cli\\u003e$1,200/yr fitness reimbursement for any healthy lifestyle and gym-related purchases\\u003c/li\\u003e\\n\\u003cli\\u003eCorporate discounts on gym memberships and top-brand gear\\u003c/li\\u003e\\n\\u003cli\\u003e15-Days of PTO for all new hires…increases in PTO at various years of service\\u003c/li\\u003e\\n\\u003cli\\u003e5% 401(k) Match Program\\u003c/li\\u003e\\n\\u003cli\\u003eFour week paid sabbatical for all employees after 7 years of service\\u003c/li\\u003e\\n\\u003cli\\u003eDog friendly office\\u003c/li\\u003e\\n\\u003cli\\u003eCreative and high energy office at INDUSTRY Denver in RiNo\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eMore about TrainHeroic:\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eTrainHeroic operates under the umbrella company Peaksware, Inc. along with TrainingPeaks, MakeMusic, and Alfred Music. Together, we have been recognized as Outside Magazine's \\\"Best Places to Work\\\" five times along with BuiltInColorado's \\\"Best Places to Work\\\" list 2017/2018.\\u003c/p\\u003e\\n\",\"how_to_apply\":\"\\u003cp\\u003eApply \\u003ca href=\\\"https://peaksware.workable.com/jobs/957555\\\"\\u003ehere\\u003c/a\\u003e\\u003c/p\\u003e\\n\",\r\n    type:\"Full Time\"\r\n};\r\n\r\nclass VacancyPage extends React.Component {\r\n    render(){\r\n        return(\r\n        <div>\r\n            <h1>{vacancy.title}</h1>\r\n            <h3>{vacancy.company}</h3>\r\n            <h5>{vacancy.location}</h5>\r\n            <h5>{vacancy.type}</h5>\r\n            <p>{vacancy.description}</p>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VacancyPage;\r\n","import React from 'react';\nimport './App.css';\nimport List from \"../list/list.js\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport VacancyPage from \"../vacancyPage/vacancyPage.js\";\nimport {Binding as match} from \"@babel/traverse\";\n\n\nclass App extends React.Component{\n    render() {\n        return (\n            <div>\n                <Router>\n                    <div>\n                        <Route exact path=\"/vacancy\" component={List} />\n                        <Route path='/vacancy/page' component={VacancyPage}/>\n                    </div>\n                </Router>\n            </div>\n        );\n      }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}